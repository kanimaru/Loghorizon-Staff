// 
// 
// 

#include "Sound.h"
#include "Timer.h"
#include <avr/pgmspace.h>

#define melodyPin 3
#define START 0

const PROGMEM uint16_t delays[] = { 0, 0, 0, 0, 240, 0, 240, 0, 240, 0, 240, 0, 480, 0, 0, 0, 0, 0, 0, 0, 240, 0, 240, 0, 240, 0, 240, 0, 1439, 1, 0, 0, 0, 0, 0, 0, 240, 0, 240, 0, 240, 0, 240, 0, 480, 0, 0, 0, 0, 0, 0, 0, 240, 0, 240, 0, 240, 0, 240, 0, 1440, 0, 0, 0, 0, 0, 0, 0, 240, 0, 240, 0, 240, 0, 240, 0, 480, 0, 0, 0, 0, 0, 0, 0, 240, 0, 240, 0, 240, 0, 240, 0, 1285, 20, 134, 1, 0, 0, 0, 0, 0, 0, 3840, 0, 0, 0, 0, 0, 1440, 0, 0, 2400, 0, 0, 960, 0, 480, 0, 0, 480, 0, 960, 0, 960, 0, 0, 0, 0, 1440, 0, 0, 0, 2400, 0, 0, 0, 1440, 0, 0, 0, 480, 0, 1830, 4, 86, 0, 0, 0, 1, 0, 1439, 0, 0, 0, 2400, 0, 0, 0, 960, 0, 480, 0, 0, 0, 480, 0, 960, 0, 960, 0, 0, 0, 0, 0, 1440, 0, 0, 0, 2400, 0, 0, 0, 0, 135, 135, 3570, 0, 0, 0, 0, 1440, 0, 0, 2400, 0, 0, 960, 0, 480, 0, 0, 480, 0, 960, 0, 960, 0, 0, 0, 0, 1440, 0, 0, 0, 2400, 0, 0, 0, 1440, 0, 0, 0, 480, 270, 1650, 0, 0, 0, 0, 0, 240, 0, 240, 0, 960, 0, 0, 0, 2400, 0, 0, 0, 960, 0, 480, 0, 0, 0, 480, 0, 960, 0, 960, 0, 0, 0, 0, 0, 1440, 0, 0, 0, 2400, 0, 0, 0, 0, 480, 0, 480, 0, 480, 0, 480, 0, 480, 0, 480, 0, 960, 0, 0, 0, 480, 0, 480, 0, 480, 0, 0, 0, 0, 0, 480, 0, 480, 0, 480, 0, 480, 0, 480, 0, 0, 0, 0, 0, 480, 0, 480, 0, 480, 0, 0, 0, 0, 0, 480, 0, 480, 0, 480, 0, 480, 0, 480, 0, 0, 0, 0, 0, 0, 1440, 0, 0, 0, 0, 0, 0, 2400, 0, 0, 0, 0, 135, 135, 3570, 0, 0, 0
};

const PROGMEM uint16_t melody[] = {
	587, 8486, 16733, 25016, 0, 659, 0, 698, 0, 784, 0, 880, 0, 587, 8192, 16384, 24576, 8454, 16733, 25016, 0, 659, 0, 698, 0, 784, 0, 880, 24576, 0, 587, 8192, 16384, 8425, 16678, 24925, 0, 659, 0, 698, 0, 784, 0, 880, 0, 587, 8192, 16384, 24576, 8425, 16678, 24925, 0, 659, 0, 698, 0, 784, 0, 880, 0, 587, 8192, 16384, 24576, 8412, 16678, 24906, 0, 659, 0, 698, 0, 784, 0, 880, 0, 587, 8192, 16384, 24576, 8412, 16678, 24906, 0, 659, 0, 698, 0, 784, 0, 880, 16384, 16824, 16384, 0, 554, 8192, 24576, 8412, 16661, 24906, 0, 294, 8192, 16384, 24576, 8265, 8192, 8367, 16604, 8192, 16384, 8265, 0, 349, 8192, 8367, 16604, 0, 330, 0, 294, 0, 440, 8192, 16384, 8302, 8192, 8357, 16604, 24838, 8192, 16384, 24576, 8302, 8192, 8357, 16604, 24838, 0, 523, 0, 294, 0, 8192, 16384, 24576, 392, 8290, 8192, 8339, 16580, 24809, 8192, 16384, 24576, 8290, 0, 392, 8192, 8339, 16580, 24809, 0, 349, 0, 330, 0, 392, 8192, 16384, 24576, 8302, 8192, 8357, 16604, 24870, 0, 8192, 16384, 24576, 165, 8412, 16661, 24870, 0, 8192, 16384, 73, 0, 175, 8412, 0, 8192, 73, 24576, 8541, 0, 175, 16604, 8192, 8522, 8192, 8486, 8192, 8632, 0, 16384, 110, 0, 165, 16604, 24838, 0, 16384, 24576, 110, 0, 165, 16604, 24838, 8192, 8715, 8192, 8584, 0, 16384, 24576, 98, 8192, 8632, 8192, 8584, 0, 147, 16580, 24809, 0, 16384, 24576, 98, 8192, 8584, 0, 147, 16580, 24809, 8192, 8541, 8192, 8522, 8192, 8584, 0, 16384, 24576, 117, 0, 147, 16559, 24809, 8192, 0, 16384, 24576, 65, 0, 98, 0, 165, 0, 196, 0, 262, 0, 196, 0, 330, 8541, 0, 73, 16531, 8192, 8522, 8192, 8486, 8192, 8454, 0, 16384, 82, 16549, 8192, 8584, 8192, 8541, 8192, 8522, 8192, 8584, 8192, 8541, 0, 16384, 87, 16559, 8192, 8632, 8192, 8715, 8192, 8686, 0, 16384, 98, 16580, 8192, 8632, 8192, 8584, 8192, 8486, 8192, 8584, 8192, 8486, 25016, 0, 16384, 110, 16604, 8192, 24576, 8469, 0, 16384, 165, 16604, 8192, 8779, 0, 16384, 147, 17264, 25751, 8192, 16384, 24576, 0
};
#define deviceCount = 4;

void setupSound()
{
	pinMode(2, OUTPUT);//buzzer
	pinMode(3, OUTPUT);//buzzer
	pinMode(4, OUTPUT);//buzzer
	pinMode(5, OUTPUT);//buzzer
	
	uint8_t device;
	uint16_t mel;
	uint16_t temp;
	uint16_t size = 358;

	// iterate over the notes of the melody:
	for (int thisNote = START; thisNote < size; thisNote++)
	{
		mel = pgm_read_word_near(melody + thisNote);
		temp = pgm_read_word_near(delays + thisNote);

		device = (mel >> 13) + 2;
		mel = mel & 0b0001111111111111;
		Serial.print("Device: ");
		Serial.print(device);
		Serial.print(" Mel: ");
		Serial.print(mel);
		Serial.print(" Tempo: ");
		Serial.println(temp);
		if (mel == 0) noTone(device);
		else tone(device, mel);
		delay(temp);
		// stop the tone playing:
		
	}
}

void doSound()
{
}
